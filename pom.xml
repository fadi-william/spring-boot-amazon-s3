<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.levioza.hipster</groupId>
	<artifactId>amazon-s3</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>amazon-s3</name>
	<description>Amazon S3 Integration with Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- Sonar - Code Analysis -->
		<sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>
		<sonar.url>https://sonarcloud.io</sonar.url>
		<sonar.param.organization>levioza-github</sonar.param.organization>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Validation Support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Amazon AWS - SDK -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.11.296</version>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- The Sonar profile. -->
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Ignore some rules -->
				<sonar.issue.ignore.multicriteria>S3457,S2187</sonar.issue.ignore.multicriteria>
				<!-- False Positive - https://stackoverflow.com/questions/48683723/sonarqube-string-contains-no-format-specifiers-when-logging-constant-string-m -->
				<sonar.issue.ignore.multicriteria.S3457.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3457.resourceKey>
				<sonar.issue.ignore.multicriteria.S3457.ruleKey>squid:S3457</sonar.issue.ignore.multicriteria.S3457.ruleKey>
				<sonar.issue.ignore.multicriteria.S2187.resourceKey>src/test/java/**/*</sonar.issue.ignore.multicriteria.S2187.resourceKey>
				<sonar.issue.ignore.multicriteria.S2187.ruleKey>squid:S2187</sonar.issue.ignore.multicriteria.S2187.ruleKey>
				<!-- Optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>${sonar.url}</sonar.host.url>
				<sonar.organization>${sonar.param.organization}</sonar.organization>
				<sonar.login>${sonarLoginToken}</sonar.login>
			</properties>
		</profile>
	</profiles>

</project>